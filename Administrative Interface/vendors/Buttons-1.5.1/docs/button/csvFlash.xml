<?xml version="1.0" encoding="UTF-8" ?>
<dt-button library="Buttons">
	<name>csvFlash</name>
	<summary>Create and save a CSV file that contains the data from the table (Adobe Flash - deprecated)</summary>
	<since>1.0.0</since>

	<requires>
		* Buttons' _Flash export button_ plug-in.
		* Adobe Flash
	</requires>
	
	<deprecated>
		<version>1.2.0</version>
		<description>
			As Flash is now [being expunged](http://arstechnica.co.uk/information-technology/2016/05/chrome-flash-click-to-play-html5-by-default/) from all browsers, the Flash buttons are only suitable for use in old browsers. As such, they will no longer see new features developed for them after Buttons 1.2.0. They will be removed from the distribution in the next major release.
		</description>
	</deprecated>

	<description>
		This button provides the end user with the ability to save the table's data into a locally created Comma Separated Values (CSV) file. That file can then be used by variety of programs including spreadsheet and data analysis applications.

		Please note that this button has a number of restrictions:

		* Adobe Flash must be installed.
		* The action for this button _cannot_ be activated using the `b-api button().trigger()` or key combination methods due to the security restrictions of Flash
		* The created file save dialogue must be shown and the file cannot be automatically opened.
		
		The `b-button csvHtml5` method provides much greater flexibility and thus button is considered to be sunsetted, but is still provided for use with older browsers that do not support the APIs required for the `b-button csvHtml5` button type.

		[Adobe Flash](https://get.adobe.com/flashplayer/) is required for this button to operate. If Flash is not installed, or disabled, in the end user's browser this button will not appear. For a non-Flash alternative please see the `b-button csvHtml5` button type. Additionally the `b-button csv` will automatically select between this button and `b-button csvHtml5` depending on the features of the browser.
	</description>


	<option type="string" name="text" default="CSV">
		The button's display text. The text can be configured using this option (see `b-init buttons.buttons.text`) or the `buttons.copy` option of the DataTables `dt-init language` object.
	</option>

	<option type="string" name="className" default="buttons-csv buttons-flash">
		The button's class name. See `b-init buttons.buttons.className` for details.
	</option>

	<option type="function" name="action">
		Create and save a CSV file.
	</option>

	<option type="string" name="fieldSeparator" default=",">
		The character(s) used to separate fields in the plain text representation of the table that is copied to the system's clipboard.		
	</option>

	<option type="string" name="fieldBoundary" default='"'>
		The character(s) used to enclose each field in the plain text representation of the table that is copied to the system's clipboard. This is automatically added at the start and end of each cell's data.
	</option>

	<option type="object" name="exportOptions" default="{}">
		Select the data to be gathered from the DataTable for export. This includes options for which columns, rows, ordering and search. Please see the `b-api buttons.exportData()` method for full details - the object given by this parameter is passed directly into that action to gather the required data.
	</option>

	<option type="string" name="newline" default="\n">
		The character(s) used to separate the lines of data. Please note that on Windows client's the default is `\r\n`. All other platforms have a default or `\n` only.
	</option>

	<option type="boolean" name="header" default="true">
		Indicate if the table header should be included in the exported data or not.
	</option>

	<option type="boolean" name="footer" default="false">
		Indicate if the table footer should be included in the exported data or not.
	</option>

	<option type="string|function" name="filename" default="*">
		File name to give the created file (plus the extension defined by the `extension` option). The special character `*` is automatically replaced with the value read from the host document's `-tag title` tag.
	</option>

	<option type="string" name="extension" default=".csv">
		The extension to give the created file name.
	</option>

	<option type="string" name="escapeChar" default='"'>
		Character to use as the escape character for CSV data. This will be prefixed to any data found in the fields which matches that set by the `fieldBoundary` option. It is a configurable option as different applications can require different options - however the default matches [RFC4180](https://tools.ietf.org/html/rfc4180).
	</option>

	<option type="function" name="customize" default="undefined" since="1.1.1">
		Function that can be used to modify the contents of the exported data. The function takes two parameters, the data as configured by the button and the button's configuration object. The value that the function returns is the value that will be used for the export.

		This can be particularly useful if you wish to add a company header or footer, description data or any other information to the exported data.
	</option>


	<example title="DataTables initialisation: Use the Flash CSV button"><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		'csvFlash'
	]
} );

]]></example>

	<example title="DataTables initialisation: Use the `b-button csv` button type to automatically select between the Flash and HTML button options."><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		'csv'
	]
} );

]]></example>

	<example title="DataTables initialisation: Use the `exportOptions` to save all data, regardless of filtering"><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		{
			extend: 'csvFlash',
			text: 'Copy all data',
			exportOptions: {
				modifier: {
					search: 'none'
				}
			}
		}
	]
} );

]]></example>
</dt-button>