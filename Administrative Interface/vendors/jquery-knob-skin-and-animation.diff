--- jquery.knob.js-orig	2015-12-16 15:12:42.000000000 -0500
+++ jquery.knob.js	2018-01-11 14:37:27.365069576 -0500
@@ -59,6 +59,7 @@
         this.i = null; // mixed HTMLInputElement or array of HTMLInputElement
         this.g = null; // deprecated 2D graphics context for 'pre-rendering'
         this.v = null; // value ; mixed array or integer
+        this.oldv = null; // old value ; mixed array or integer
         this.cv = null; // change value ; not commited value
         this.x = 0; // canvas x position
         this.y = 0; // canvas y position
@@ -101,6 +102,9 @@
                     max: this.$.data('max') !== undefined ? this.$.data('max') : 100,
                     stopper: true,
                     readOnly: this.$.data('readonly') || (this.$.attr('readonly') === 'readonly'),
+                    skin: this.$.data('skin') || 'default',
+                    animated: this.$.data('animated') || false,
+                    easing: this.$.data('easing') || 'swing',
 
                     // UI
                     cursor: this.$.data('cursor') === true && 30
@@ -525,9 +529,13 @@
                     && this.rH(v) === false) { return; }
 
                 this.cv = this.o.stopper ? max(min(v, this.o.max), this.o.min) : v;
-                this.v = this.cv;
-                this.$.val(this.o.format(this.v));
-                this._draw();
+                if ( this.o.animated)
+                {
+                    var that = this;
+                    $({animatedVal: ( this.oldv ? this.oldv : 0)}).animate ({animatedVal: this.$.val()}, { duration: this.o.animated, easing: this.o.easing, step: function () { that.change ( Math.ceil ( this.animatedVal)); that._draw ();}});
+                } else {
+                    this._draw();
+                }
             } else {
                 return this.v;
             }
@@ -726,6 +734,7 @@
         };
 
         this.change = function (v) {
+            this.oldv = this.cv;
             this.cv = v;
             this.$.val(this.o.format(v));
         };
@@ -761,29 +770,59 @@
                 pa,                         // Previous arc
                 r = 1;
 
-            c.lineWidth = this.lineWidth;
-            c.lineCap = this.lineCap;
+            switch ( this.o.skin) {
+                case "default":
+                    c.lineWidth = this.lineWidth;
+                    c.lineCap = this.lineCap;
+
+                    if (this.o.bgColor !== "none") {
+                        c.beginPath();
+                            c.strokeStyle = this.o.bgColor;
+                            c.arc(this.xy, this.xy, this.radius, this.endAngle - 0.00001, this.startAngle + 0.00001, true);
+                        c.stroke();
+                    }
 
-            if (this.o.bgColor !== "none") {
-                c.beginPath();
-                    c.strokeStyle = this.o.bgColor;
-                    c.arc(this.xy, this.xy, this.radius, this.endAngle - 0.00001, this.startAngle + 0.00001, true);
-                c.stroke();
-            }
+                    if (this.o.displayPrevious) {
+                        pa = this.arc(this.v);
+                        c.beginPath();
+                        c.strokeStyle = this.pColor;
+                        c.arc(this.xy, this.xy, this.radius, pa.s, pa.e, pa.d);
+                        c.stroke();
+                        r = this.cv == this.v;
+                    }
 
-            if (this.o.displayPrevious) {
-                pa = this.arc(this.v);
-                c.beginPath();
-                c.strokeStyle = this.pColor;
-                c.arc(this.xy, this.xy, this.radius, pa.s, pa.e, pa.d);
-                c.stroke();
-                r = this.cv == this.v;
-            }
+                    c.beginPath();
+                    c.strokeStyle = r ? this.o.fgColor : this.fgColor ;
+                    c.arc(this.xy, this.xy, this.radius, a.s, a.e, a.d);
+                    c.stroke();
+
+                    break;
+                case "tron":
+                    this.cursorExt = 0.3;
+
+                    this.g.lineWidth = this.lineWidth;
+
+                    if (this.o.displayPrevious) {
+                        pa = this.arc(this.v);
+                        this.g.beginPath();
+                        this.g.strokeStyle = this.pColor;
+                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, pa.s, pa.e, pa.d);
+                        this.g.stroke();
+                    }
 
-            c.beginPath();
-            c.strokeStyle = r ? this.o.fgColor : this.fgColor ;
-            c.arc(this.xy, this.xy, this.radius, a.s, a.e, a.d);
-            c.stroke();
+                    this.g.beginPath();
+                    this.g.strokeStyle = r ? this.o.fgColor : this.fgColor ;
+                    this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a.s, a.e, a.d);
+                    this.g.stroke();
+
+                    this.g.lineWidth = 2;
+                    this.g.beginPath();
+                    this.g.strokeStyle = this.o.fgColor;
+                    this.g.arc( this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
+                    this.g.stroke();
+
+                    break;
+            }
         };
 
         this.cancel = function () {
